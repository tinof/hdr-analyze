name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential pkg-config clang libclang-dev \
          ffmpeg libavformat-dev libavcodec-dev libavutil-dev \
          libavfilter-dev libavdevice-dev libswscale-dev
        echo "BINDGEN_EXTRA_CLANG_ARGS=-I/usr/include/$(gcc -dumpmachine)" >> $GITHUB_ENV

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install llvm ffmpeg pkg-config
        echo "LIBCLANG_PATH=$(brew --prefix llvm)/lib" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$(brew --prefix ffmpeg)/lib/pkgconfig:$(brew --prefix)/lib/pkgconfig" >> $GITHUB_ENV
        echo "BINDGEN_EXTRA_CLANG_ARGS=-I$(brew --prefix)/include" >> $GITHUB_ENV

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y llvm
        vcpkg install ffmpeg[avformat,avcodec,avutil,avfilter,avdevice,swscale]:x64-windows
        echo "LIBCLANG_PATH=C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "PKG_CONFIG_PATH=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\lib\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Clippy linting
      run: cargo clippy --workspace --all-targets --release -- -D warnings

    - name: Build
      run: cargo build --release --workspace --verbose

    - name: Test
      run: cargo test --workspace --verbose

  build-linux-arm64:
    name: Build on ARM64
    runs-on: ubuntu-24.04-arm64
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (ARM64)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config clang libclang-dev \
            ffmpeg libavformat-dev libavcodec-dev libavutil-dev \
            libavfilter-dev libavdevice-dev libswscale-dev
          echo "BINDGEN_EXTRA_CLANG_ARGS=-I/usr/include/$(gcc -dumpmachine)" >> $GITHUB_ENV
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Clippy linting
        run: cargo clippy --workspace --all-targets --release -- -D warnings
      - name: Build
        run: cargo build --release --workspace --verbose
      - name: Test
        run: cargo test --workspace --verbose
